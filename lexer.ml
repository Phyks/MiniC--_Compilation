# 5 "lexer.mll"
 
    open Lexing
    open Parser

    exception Lexing_error of string

    let keywords_tbl = ["std::cout", COUT;
                        "class", CLASS;
                        "else", ELSE;
                        "false", FALSE;
                        "for", FOR; 
                        "if", IF;
                        "int", TINT; (* TODO : Delete and put in lexer hack *)
                        "new", NEW;
                        "NULL", NULL;
                        "public", PUBLIC;
                        "return", RETURN;
                        "this", THIS;
                        "true", TRUE;
                        "virtual", VIRTUAL;
                        "void", VOID;
                        "while", WHILE;]

    let id_or_kwd = 
        let keywords = Hashtbl.create 14 in
        List.iter (fun (s, t) -> Hashtbl.add keywords s t) keywords_tbl;
        fun s -> 
            try Hashtbl.find keywords s with Not_found -> 
                (*try List.assoc s !types_lexhack with Not_found ->*)
                    IDENT s

    let newline lexbuf =
        let pos = lexbuf.lex_curr_p in
        lexbuf.lex_curr_p <- 
            { pos with pos_lnum = pos.pos_lnum + 1; pos_bol = pos.pos_cnum }

# 39 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\219\255\220\255\094\000\174\000\184\000\210\000\224\255\
    \225\255\227\255\228\255\229\255\230\255\232\255\233\255\236\255\
    \238\255\195\000\020\000\003\000\031\000\032\000\033\000\001\000\
    \117\000\054\000\004\000\254\255\137\000\133\000\145\000\137\000\
    \129\000\147\000\147\000\217\000\190\000\146\000\141\000\138\000\
    \138\000\141\000\167\000\172\000\161\000\209\000\255\255\252\255\
    \251\255\250\255\249\255\248\255\226\255\246\255\244\255\243\255\
    \231\255\242\255\029\001\052\001\067\001\221\255\078\001\167\001\
    \090\001\247\001\049\001\253\255\254\255\225\000\255\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\036\000\033\000\033\000\032\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\016\000\015\000\010\000\008\000\020\000\014\000\021\000\
    \036\000\018\000\002\000\255\255\036\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\033\000\033\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\001\000\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\068\000\000\000\000\000\255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\026\000\027\000\000\000\000\000\026\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \026\000\021\000\003\000\028\000\026\000\015\000\023\000\049\000\
    \014\000\013\000\016\000\018\000\009\000\017\000\012\000\025\000\
    \005\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\010\000\011\000\020\000\022\000\019\000\055\000\
    \054\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\052\000\053\000\051\000\050\000\006\000\
    \047\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\008\000\024\000\007\000\063\000\063\000\
    \061\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\062\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \057\000\048\000\029\000\030\000\031\000\032\000\033\000\034\000\
    \035\000\036\000\037\000\038\000\039\000\040\000\041\000\042\000\
    \002\000\056\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\043\000\044\000\045\000\046\000\
    \070\000\000\000\000\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\000\000\000\000\000\000\
    \058\000\006\000\000\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\060\000\063\000\
    \063\000\000\000\000\000\069\000\000\000\000\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\059\000\059\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\000\000\000\000\000\000\000\000\
    \063\000\000\000\000\000\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\000\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\065\000\065\000\065\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\000\000\000\000\000\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\063\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\000\000\000\000\000\000\000\000\000\000\064\000\063\000\
    \063\000\061\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\062\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\067\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\026\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\026\000\000\000\000\000\023\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\018\000\
    \019\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\020\000\020\000\021\000\022\000\000\000\
    \025\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \017\000\024\000\028\000\029\000\030\000\031\000\032\000\033\000\
    \034\000\035\000\036\000\037\000\038\000\039\000\040\000\041\000\
    \000\000\017\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\042\000\043\000\044\000\045\000\
    \069\000\255\255\255\255\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\255\255\255\255\255\255\
    \005\000\006\000\255\255\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\062\000\
    \062\000\255\255\255\255\066\000\255\255\255\255\058\000\058\000\
    \058\000\058\000\058\000\058\000\059\000\059\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\255\255\255\255\255\255\255\255\
    \062\000\255\255\255\255\060\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\060\000\060\000\060\000\255\255\058\000\058\000\
    \058\000\058\000\058\000\058\000\060\000\060\000\060\000\060\000\
    \060\000\060\000\064\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\064\000\064\000\064\000\064\000\064\000\
    \064\000\255\255\255\255\255\255\060\000\060\000\060\000\060\000\
    \060\000\060\000\062\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\064\000\064\000\064\000\064\000\064\000\
    \064\000\255\255\255\255\255\255\255\255\255\255\062\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\065\000\
    \065\000\065\000\065\000\065\000\065\000\065\000\065\000\065\000\
    \065\000\066\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \065\000\065\000\065\000\065\000\065\000\065\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \065\000\065\000\065\000\065\000\065\000\065\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 62 "lexer.mll"
                            ( INCLUDE )
# 286 "lexer.ml"

  | 1 ->
# 63 "lexer.mll"
           ( newline lexbuf ; token lexbuf )
# 291 "lexer.ml"

  | 2 ->
# 64 "lexer.mll"
              ( token lexbuf )
# 296 "lexer.ml"

  | 3 ->
# 65 "lexer.mll"
           ( comment lexbuf)
# 301 "lexer.ml"

  | 4 ->
# 66 "lexer.mll"
           ( OR )
# 306 "lexer.ml"

  | 5 ->
# 67 "lexer.mll"
           ( AND )
# 311 "lexer.ml"

  | 6 ->
# 68 "lexer.mll"
           ( EQ )
# 316 "lexer.ml"

  | 7 ->
# 69 "lexer.mll"
           ( NEQ )
# 321 "lexer.ml"

  | 8 ->
# 70 "lexer.mll"
          ( LT )
# 326 "lexer.ml"

  | 9 ->
# 71 "lexer.mll"
           ( LEQ )
# 331 "lexer.ml"

  | 10 ->
# 72 "lexer.mll"
          ( GT )
# 336 "lexer.ml"

  | 11 ->
# 73 "lexer.mll"
           ( GEQ )
# 341 "lexer.ml"

  | 12 ->
# 74 "lexer.mll"
           ( INCR )
# 346 "lexer.ml"

  | 13 ->
# 75 "lexer.mll"
           ( DECR )
# 351 "lexer.ml"

  | 14 ->
# 76 "lexer.mll"
          ( ASSIGN )
# 356 "lexer.ml"

  | 15 ->
# 77 "lexer.mll"
          ( PLUS )
# 361 "lexer.ml"

  | 16 ->
# 78 "lexer.mll"
          ( MINUS )
# 366 "lexer.ml"

  | 17 ->
# 79 "lexer.mll"
          ( TIMES )
# 371 "lexer.ml"

  | 18 ->
# 80 "lexer.mll"
          ( DIV )
# 376 "lexer.ml"

  | 19 ->
# 81 "lexer.mll"
          ( MOD )
# 381 "lexer.ml"

  | 20 ->
# 82 "lexer.mll"
          ( NOT )
# 386 "lexer.ml"

  | 21 ->
# 83 "lexer.mll"
          ( ECOMM )
# 391 "lexer.ml"

  | 22 ->
# 84 "lexer.mll"
          ( LPAREN )
# 396 "lexer.ml"

  | 23 ->
# 85 "lexer.mll"
          ( RPAREN )
# 401 "lexer.ml"

  | 24 ->
# 86 "lexer.mll"
           ( ARROW )
# 406 "lexer.ml"

  | 25 ->
# 87 "lexer.mll"
          ( DOT )
# 411 "lexer.ml"

  | 26 ->
# 88 "lexer.mll"
          ( SEMICOLON )
# 416 "lexer.ml"

  | 27 ->
# 89 "lexer.mll"
          ( COLON )
# 421 "lexer.ml"

  | 28 ->
# 90 "lexer.mll"
          ( COMMA )
# 426 "lexer.ml"

  | 29 ->
# 91 "lexer.mll"
           ( IN )
# 431 "lexer.ml"

  | 30 ->
# 92 "lexer.mll"
          ( LBRACE )
# 436 "lexer.ml"

  | 31 ->
# 93 "lexer.mll"
          ( RBRACE )
# 441 "lexer.ml"

  | 32 ->
let
# 94 "lexer.mll"
               s
# 447 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 95 "lexer.mll"
        ( id_or_kwd s )
# 451 "lexer.ml"

  | 33 ->
let
# 96 "lexer.mll"
                i
# 457 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 96 "lexer.mll"
                  ( INT (int_of_string i) )
# 461 "lexer.ml"

  | 34 ->
let
# 97 "lexer.mll"
                s
# 467 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 97 "lexer.mll"
                  ( STRING s )
# 471 "lexer.ml"

  | 35 ->
# 98 "lexer.mll"
          ( EOF )
# 476 "lexer.ml"

  | 36 ->
let
# 99 "lexer.mll"
           c
# 482 "lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 99 "lexer.mll"
             ( raise (Lexing_error ("Caractère illégal : " ^ String.make 1 c)) )
# 486 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 66
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 102 "lexer.mll"
           ( token lexbuf )
# 497 "lexer.ml"

  | 1 ->
# 103 "lexer.mll"
        ( comment lexbuf )
# 502 "lexer.ml"

  | 2 ->
# 104 "lexer.mll"
          ( raise (Lexing_error "Commentaire non terminé.") )
# 507 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

