# 3 "lexer.mll"
 
    open Lexing
    open Parser
    open Lexhack

    exception Lexing_error of string

    let keywords_tbl = ["class", CLASS;
                        "else", ELSE;
                        "false", FALSE;
                        "for", FOR; 
                        "if", IF;
                        "int", TINT;
                        "new", NEW;
                        "NULL", NULL;
                        "public", PUBLIC;
                        "return", RETURN;
                        "this", THIS;
                        "true", TRUE;
                        "virtual", VIRTUAL;
                        "void", VOID;
                        "while", WHILE;]

    let id_or_kwd = 
        let keywords = Hashtbl.create 14 in
        List.iter (fun (s, t) -> Hashtbl.add keywords s t) keywords_tbl;
        fun s -> 
            try Hashtbl.find keywords s with Not_found -> begin
                if List.mem s !(Lexhack.types_lexhack) then
                    TIDENT s
                else
                    IDENT s
            end

    let newline lexbuf =
        let pos = lexbuf.lex_curr_p in
        lexbuf.lex_curr_p <- 
            { pos with pos_lnum = pos.pos_lnum + 1; pos_bol = pos.pos_cnum }

    let localstring = ref ""

# 44 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\213\255\214\255\215\255\078\000\088\000\112\000\221\255\
    \222\255\224\255\225\255\226\255\227\255\229\255\230\255\233\255\
    \235\255\108\000\020\000\003\000\031\000\032\000\033\000\001\000\
    \020\000\103\000\192\000\004\000\254\255\041\000\037\000\049\000\
    \041\000\034\000\052\000\053\000\064\000\095\000\051\000\046\000\
    \043\000\043\000\057\000\071\000\076\000\065\000\113\000\255\255\
    \011\001\086\001\118\000\104\000\094\000\095\000\118\000\120\000\
    \252\255\137\000\130\000\251\255\249\255\250\255\248\255\247\255\
    \246\255\245\255\223\255\243\255\241\255\240\255\228\255\239\255\
    \161\001\184\001\199\001\014\002\247\255\248\255\108\002\254\255\
    \255\255\095\002\250\255\251\255\252\255\253\255\181\002\249\255\
    \241\000\253\255\254\255\192\000\255\255\240\000\254\255\255\255\
    ";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\037\000\036\000\035\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\019\000\018\000\013\000\011\000\023\000\017\000\024\000\
    \042\000\021\000\035\000\002\000\255\255\042\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \035\000\035\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\038\000\039\000\255\255\255\255\255\255\008\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\001\000\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\000\000\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\255\255\255\255\076\000\000\000\000\000\255\255\000\000\
    \000\000\255\255\000\000\000\000\000\000\000\000\255\255\000\000\
    \090\000\000\000\000\000\255\255\000\000\094\000\000\000\000\000\
    ";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\027\000\028\000\000\000\000\000\027\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \027\000\021\000\003\000\029\000\027\000\015\000\023\000\063\000\
    \014\000\013\000\016\000\018\000\009\000\017\000\012\000\025\000\
    \005\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\010\000\011\000\020\000\022\000\019\000\069\000\
    \068\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\066\000\067\000\065\000\064\000\006\000\
    \037\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\026\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\008\000\024\000\007\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \062\000\061\000\030\000\031\000\032\000\033\000\060\000\034\000\
    \035\000\071\000\036\000\038\000\039\000\040\000\041\000\042\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\070\000\043\000\044\000\045\000\046\000\047\000\
    \051\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\053\000\057\000\052\000\054\000\006\000\
    \072\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\055\000\056\000\058\000\059\000\092\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\095\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\091\000\000\000\000\000\000\000\006\000\
    \000\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\048\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\000\000\000\000\
    \000\000\000\000\006\000\000\000\006\000\006\000\006\000\049\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \050\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\000\000\000\000\000\000\000\000\006\000\000\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\074\000\074\000\074\000\074\000\074\000\074\000\074\000\
    \074\000\074\000\074\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\074\000\074\000\074\000\074\000\074\000\074\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \255\255\089\000\000\000\000\000\000\000\000\000\000\000\074\000\
    \074\000\074\000\074\000\074\000\074\000\074\000\074\000\074\000\
    \074\000\000\000\074\000\074\000\074\000\074\000\074\000\074\000\
    \074\000\074\000\074\000\074\000\074\000\074\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \074\000\074\000\074\000\074\000\074\000\074\000\079\000\079\000\
    \080\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\078\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\079\000\079\000\
    \079\000\079\000\079\000\079\000\079\000\079\000\084\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\086\000\
    \086\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\000\000\000\000\
    \085\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\083\000\000\000\000\000\000\000\000\000\000\000\
    \082\000\000\000\000\000\000\000\081\000\087\000\087\000\087\000\
    \087\000\087\000\087\000\087\000\087\000\087\000\087\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\087\000\087\000\
    \087\000\087\000\087\000\087\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\077\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\087\000\087\000\
    \087\000\087\000\087\000\087\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\027\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\027\000\000\000\000\000\023\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\018\000\
    \019\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\020\000\020\000\021\000\022\000\000\000\
    \036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \024\000\025\000\029\000\030\000\031\000\032\000\025\000\033\000\
    \034\000\017\000\035\000\037\000\038\000\039\000\040\000\041\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\017\000\042\000\043\000\044\000\045\000\046\000\
    \050\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\051\000\052\000\051\000\053\000\006\000\
    \005\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\054\000\055\000\057\000\058\000\091\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\093\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\088\000\255\255\255\255\255\255\026\000\
    \255\255\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\255\255\255\255\
    \255\255\255\255\048\000\255\255\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
    \048\000\048\000\048\000\048\000\048\000\048\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\255\255\255\255\255\255\255\255\255\255\255\255\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\255\255\255\255\255\255\255\255\049\000\255\255\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
    \049\000\072\000\072\000\072\000\072\000\072\000\072\000\072\000\
    \072\000\072\000\072\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\072\000\072\000\072\000\072\000\072\000\072\000\
    \073\000\073\000\073\000\073\000\073\000\073\000\073\000\073\000\
    \093\000\088\000\255\255\255\255\255\255\255\255\255\255\074\000\
    \074\000\074\000\074\000\074\000\074\000\074\000\074\000\074\000\
    \074\000\255\255\072\000\072\000\072\000\072\000\072\000\072\000\
    \074\000\074\000\074\000\074\000\074\000\074\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \074\000\074\000\074\000\074\000\074\000\074\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\075\000\075\000\
    \075\000\075\000\075\000\075\000\075\000\075\000\078\000\081\000\
    \081\000\081\000\081\000\081\000\081\000\081\000\081\000\081\000\
    \081\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \081\000\081\000\081\000\081\000\081\000\081\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \081\000\081\000\081\000\081\000\081\000\081\000\255\255\255\255\
    \078\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\078\000\255\255\255\255\255\255\255\255\255\255\
    \078\000\255\255\255\255\255\255\078\000\086\000\086\000\086\000\
    \086\000\086\000\086\000\086\000\086\000\086\000\086\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\086\000\086\000\
    \086\000\086\000\086\000\086\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\075\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\086\000\086\000\
    \086\000\086\000\086\000\086\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 60 "lexer.mll"
                            ( INCLUDE )
# 349 "lexer.ml"

  | 1 ->
# 61 "lexer.mll"
           ( newline lexbuf ; token lexbuf )
# 354 "lexer.ml"

  | 2 ->
# 62 "lexer.mll"
              ( token lexbuf )
# 359 "lexer.ml"

  | 3 ->
# 63 "lexer.mll"
                  ( COUT )
# 364 "lexer.ml"

  | 4 ->
# 64 "lexer.mll"
                  ( ENDL )
# 369 "lexer.ml"

  | 5 ->
# 65 "lexer.mll"
           ( comment lexbuf )
# 374 "lexer.ml"

  | 6 ->
# 66 "lexer.mll"
           ( comment_inline lexbuf )
# 379 "lexer.ml"

  | 7 ->
# 67 "lexer.mll"
           ( OR )
# 384 "lexer.ml"

  | 8 ->
# 68 "lexer.mll"
           ( AND )
# 389 "lexer.ml"

  | 9 ->
# 69 "lexer.mll"
           ( EQ )
# 394 "lexer.ml"

  | 10 ->
# 70 "lexer.mll"
           ( NEQ )
# 399 "lexer.ml"

  | 11 ->
# 71 "lexer.mll"
          ( LT )
# 404 "lexer.ml"

  | 12 ->
# 72 "lexer.mll"
           ( LEQ )
# 409 "lexer.ml"

  | 13 ->
# 73 "lexer.mll"
          ( GT )
# 414 "lexer.ml"

  | 14 ->
# 74 "lexer.mll"
           ( GEQ )
# 419 "lexer.ml"

  | 15 ->
# 75 "lexer.mll"
           ( INCR )
# 424 "lexer.ml"

  | 16 ->
# 76 "lexer.mll"
           ( DECR )
# 429 "lexer.ml"

  | 17 ->
# 77 "lexer.mll"
          ( ASSIGN )
# 434 "lexer.ml"

  | 18 ->
# 78 "lexer.mll"
          ( PLUS )
# 439 "lexer.ml"

  | 19 ->
# 79 "lexer.mll"
          ( MINUS )
# 444 "lexer.ml"

  | 20 ->
# 80 "lexer.mll"
          ( TIMES )
# 449 "lexer.ml"

  | 21 ->
# 81 "lexer.mll"
          ( DIV )
# 454 "lexer.ml"

  | 22 ->
# 82 "lexer.mll"
          ( MOD )
# 459 "lexer.ml"

  | 23 ->
# 83 "lexer.mll"
          ( NOT )
# 464 "lexer.ml"

  | 24 ->
# 84 "lexer.mll"
          ( ECOMM )
# 469 "lexer.ml"

  | 25 ->
# 85 "lexer.mll"
          ( LPAREN )
# 474 "lexer.ml"

  | 26 ->
# 86 "lexer.mll"
          ( RPAREN )
# 479 "lexer.ml"

  | 27 ->
# 87 "lexer.mll"
           ( ARROW )
# 484 "lexer.ml"

  | 28 ->
# 88 "lexer.mll"
          ( DOT )
# 489 "lexer.ml"

  | 29 ->
# 89 "lexer.mll"
          ( SEMICOLON )
# 494 "lexer.ml"

  | 30 ->
# 90 "lexer.mll"
          ( COLON )
# 499 "lexer.ml"

  | 31 ->
# 91 "lexer.mll"
          ( COMMA )
# 504 "lexer.ml"

  | 32 ->
# 92 "lexer.mll"
           ( IN )
# 509 "lexer.ml"

  | 33 ->
# 93 "lexer.mll"
          ( LBRACE )
# 514 "lexer.ml"

  | 34 ->
# 94 "lexer.mll"
          ( RBRACE )
# 519 "lexer.ml"

  | 35 ->
let
# 95 "lexer.mll"
               s
# 525 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 96 "lexer.mll"
        ( id_or_kwd s )
# 529 "lexer.ml"

  | 36 ->
# 97 "lexer.mll"
          ( INT 0 )
# 534 "lexer.ml"

  | 37 ->
let
# 98 "lexer.mll"
                              i
# 540 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 98 "lexer.mll"
                                ( INT (int_of_string i) )
# 544 "lexer.ml"

  | 38 ->
let
# 99 "lexer.mll"
                             i
# 550 "lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 1) lexbuf.Lexing.lex_curr_pos in
# 99 "lexer.mll"
                                ( INT (int_of_string ("0o"^i)) )
# 554 "lexer.ml"

  | 39 ->
let
# 100 "lexer.mll"
                                i
# 560 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 100 "lexer.mll"
                                   ( INT (int_of_string i) )
# 564 "lexer.ml"

  | 40 ->
# 101 "lexer.mll"
          ( chaine lexbuf )
# 569 "lexer.ml"

  | 41 ->
# 102 "lexer.mll"
          ( EOF )
# 574 "lexer.ml"

  | 42 ->
let
# 103 "lexer.mll"
           c
# 580 "lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 103 "lexer.mll"
             ( raise (Lexing_error ("Caractère illégal : " ^ String.make 1 c)) )
# 584 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and chaine lexbuf =
    __ocaml_lex_chaine_rec lexbuf 75
and __ocaml_lex_chaine_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 106 "lexer.mll"
          ( let tmp = !localstring in localstring := ""; STRING tmp )
# 595 "lexer.ml"

  | 1 ->
let
# 107 "lexer.mll"
                                                     c
# 601 "lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 107 "lexer.mll"
                                                       ( localstring := !localstring ^ (String.make 1 c) ; chaine lexbuf )
# 605 "lexer.ml"

  | 2 ->
# 108 "lexer.mll"
                ( localstring := !localstring ^ "\\" ; chaine lexbuf )
# 610 "lexer.ml"

  | 3 ->
# 109 "lexer.mll"
                ( localstring := !localstring ^ "\"" ; chaine lexbuf )
# 615 "lexer.ml"

  | 4 ->
# 110 "lexer.mll"
               ( localstring := !localstring ^ "\n" ; chaine lexbuf )
# 620 "lexer.ml"

  | 5 ->
# 111 "lexer.mll"
               ( localstring := !localstring ^ "\t" ; chaine lexbuf )
# 625 "lexer.ml"

  | 6 ->
let
# 112 "lexer.mll"
                                             hex
# 631 "lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) (lexbuf.Lexing.lex_start_pos + 4) in
# 112 "lexer.mll"
                                                  ( localstring := !localstring ^ (String.make 1 (char_of_int (int_of_string ("0x"^hex)))); chaine lexbuf )
# 635 "lexer.ml"

  | 7 ->
# 113 "lexer.mll"
          ( raise (Lexing_error "Unterminated string") )
# 640 "lexer.ml"

  | 8 ->
let
# 114 "lexer.mll"
           c
# 646 "lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 114 "lexer.mll"
             ( raise (Lexing_error (Printf.sprintf "Character %s forbidden :" (if c = '\n' then "newline" else String.make 1 c))) )
# 650 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_chaine_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 88
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 118 "lexer.mll"
           ( token lexbuf )
# 661 "lexer.ml"

  | 1 ->
# 119 "lexer.mll"
        ( comment lexbuf )
# 666 "lexer.ml"

  | 2 ->
# 120 "lexer.mll"
          ( raise (Lexing_error "Commentaire non terminé.") )
# 671 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

and comment_inline lexbuf =
    __ocaml_lex_comment_inline_rec lexbuf 93
and __ocaml_lex_comment_inline_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 123 "lexer.mll"
           ( token lexbuf )
# 682 "lexer.ml"

  | 1 ->
# 124 "lexer.mll"
        ( comment_inline lexbuf )
# 687 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_comment_inline_rec lexbuf __ocaml_lex_state

;;

